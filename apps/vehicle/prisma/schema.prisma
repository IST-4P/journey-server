generator client {
    provider      = "prisma-client-js"
    output        = "../../../node_modules/@prisma-clients/vehicle"
    binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// ==================== ENUMS ====================

enum VehicleType {
    CAR // Ô tô
    MOTORCYCLE // Xe máy
}

enum VehicleStatus {
    ACTIVE // Đang hoạt động, sẵn sàng cho thuê
    INACTIVE // Tạm ngừng cho thuê
    MAINTENANCE // Đang bảo trì
    RESERVED // Đang được đặt
    RENTED // Đang được thuê
}

enum TransmissionType {
    MANUAL // Số sàn
    AUTOMATIC // Số tự động
}

enum FuelType {
    GASOLINE // Xăng
    UNLEADED_GASOLINE // Xăng không chì
    DIESEL // Dầu diesel
    ELECTRIC // Điện
    HYBRID // Hybrid
}

// ==================== MAIN MODELS ====================

// Vehicle model (refactored)
model Vehicle {
    id           String      @id @default(uuid())
    type         VehicleType
    name         String // Tên xe (VD: "Toyota Vios 2023")
    brandId      String      @map("brand_id")
    modelId      String      @map("model_id")
    licensePlate String      @unique @map("license_plate") // Biển số xe

    // Thông số kỹ thuật
    seats        Int // Số chỗ ngồi
    fuelType     FuelType         @map("fuel_type")
    transmission TransmissionType

    // Giá thuê
    pricePerHour Int @map("price_per_hour")
    pricePerDay  Int @map("price_per_day")

    // Vị trí
    location  String // Địa chỉ text (VD: "123 Nguyễn Văn A, Quận 1, TP.HCM")
    city      String // Thành phố
    ward      String // Phường/Xã
    latitude  Decimal @db.Decimal(10, 8) // Vĩ độ
    longitude Decimal @db.Decimal(11, 8) // Kinh độ

    // Mô tả và điều khoản
    description String   @db.Text
    terms       String[] // Array of terms

    // Trạng thái
    status VehicleStatus @default(ACTIVE)

    // Thống kê
    totalTrips     Int      @default(0) @map("total_trips") // Tổng số chuyến
    averageRating  Decimal? @default(0) @map("average_rating") @db.Decimal(3, 2) // Đánh giá trung bình
    totalReviewIds String[] @map("total_review_ids") // Danh sách review IDs

    // Timestamps
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    // Relations
    brand           VehicleBrand          @relation(fields: [brandId], references: [id], onDelete: Restrict)
    model           VehicleModel          @relation(fields: [modelId], references: [id], onDelete: Restrict)
    images          String[] // Array of image URLs
    vehicleFeatures VehicleOnFeature[]
    availability    VehicleAvailability[]

    @@index([type])
    @@index([status])
    @@index([brandId])
    @@index([modelId])
    @@index([city, ward])
    @@index([pricePerDay])
    @@index([latitude, longitude])
    @@index([averageRating])
    @@index([createdAt])
    @@map("vehicles")
}

model VehicleBrand {
    id        String   @id @default(uuid())
    name      String   @unique // VD: "Toyota", "Honda", "Mercedes"
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    // Relations
    models   VehicleModel[]
    vehicles Vehicle[]

    @@map("brands")
}

model VehicleModel {
    id        String   @id @default(uuid())
    name      String // VD: "Vios", "City", "C-Class"
    brandId   String   @map("brand_id")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    // Relations
    brand    VehicleBrand @relation(fields: [brandId], references: [id], onDelete: Cascade)
    vehicles Vehicle[]

    @@unique([brandId, name]) // Mỗi brand chỉ có 1 model name duy nhất
    @@index([brandId])
    @@map("vehicle_models")
}

model VehicleFeature {
    id          String @id @default(uuid())
    name        String @unique // Tên feature (VD: "Bluetooth", "Camera lùi")
    description String // Mô tả chi tiết về feature (optional)
    icon        String // Icon URL hoặc icon name (optional)

    // Timestamps
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    // Relations
    vehicles VehicleOnFeature[]

    @@index([name])
    @@map("vehicle_features")
}

model VehicleOnFeature {
    id        String @id @default(uuid())
    vehicleId String @map("vehicle_id")
    featureId String @map("feature_id")

    // Timestamps
    createdAt DateTime @default(now()) @map("created_at")

    vehicle Vehicle        @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
    feature VehicleFeature @relation(fields: [featureId], references: [id], onDelete: Cascade)

    @@unique([vehicleId, featureId])
    @@index([vehicleId])
    @@index([featureId])
    @@map("vehicle_on_features")
}

model VehicleAvailability {
    id          String   @id @default(uuid())
    vehicleId   String   @map("vehicle_id")
    date        DateTime @db.Date // Ngày cụ thể
    isAvailable Boolean  @default(true) @map("is_available") // Xe có sẵn trong ngày này không

    // Timestamps
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    vehicle Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)

    @@unique([vehicleId, date])
    @@index([vehicleId, date])
    @@index([date, isAvailable])
    @@map("vehicle_availability")
}
