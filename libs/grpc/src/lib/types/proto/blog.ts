// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.33.0
// source: blog.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "blog";

/** GetBlog */
export interface GetBlogRequest {
  id: string;
}

export interface GetBlogResponse {
  id: string;
  title: string;
  content: string;
  type: string;
  region: string;
  thumbnail: string;
  createdAt: string;
  updatedAt: string;
}

/** GetManyBlogs */
export interface GetManyBlogsRequest {
  title?: string | undefined;
  type?: string | undefined;
  region?: string | undefined;
  page: number;
  limit: number;
}

export interface GetManyBlogs {
  id: string;
  title: string;
  type: string;
  region: string;
  thumbnail: string;
  createdAt: string;
  updatedAt: string;
}

export interface GetManyBlogsResponse {
  blogs: GetManyBlogs[];
  page: number;
  limit: number;
  totalItems: number;
  totalPages: number;
}

/** CreateBlog */
export interface CreateBlogRequest {
  title: string;
  content: string;
  type: string;
  region: string;
  thumbnail: string;
}

/** UpdateBlog */
export interface UpdateBlogRequest {
  id: string;
  title?: string | undefined;
  content?: string | undefined;
  type?: string | undefined;
  region?: string | undefined;
  thumbnail?: string | undefined;
}

/** DeleteBlog */
export interface DeleteBlogRequest {
  id: string;
}

export interface DeleteBlogResponse {
  message: string;
}

export const BLOG_PACKAGE_NAME = "blog";

export interface BlogServiceClient {
  getBlog(request: GetBlogRequest): Observable<GetBlogResponse>;

  getManyBlogs(request: GetManyBlogsRequest): Observable<GetManyBlogsResponse>;

  createBlog(request: CreateBlogRequest): Observable<GetBlogResponse>;

  updateBlog(request: UpdateBlogRequest): Observable<GetBlogResponse>;

  deleteBlog(request: DeleteBlogRequest): Observable<DeleteBlogResponse>;
}

export interface BlogServiceController {
  getBlog(request: GetBlogRequest): Promise<GetBlogResponse> | Observable<GetBlogResponse> | GetBlogResponse;

  getManyBlogs(
    request: GetManyBlogsRequest,
  ): Promise<GetManyBlogsResponse> | Observable<GetManyBlogsResponse> | GetManyBlogsResponse;

  createBlog(request: CreateBlogRequest): Promise<GetBlogResponse> | Observable<GetBlogResponse> | GetBlogResponse;

  updateBlog(request: UpdateBlogRequest): Promise<GetBlogResponse> | Observable<GetBlogResponse> | GetBlogResponse;

  deleteBlog(
    request: DeleteBlogRequest,
  ): Promise<DeleteBlogResponse> | Observable<DeleteBlogResponse> | DeleteBlogResponse;
}

export function BlogServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getBlog", "getManyBlogs", "createBlog", "updateBlog", "deleteBlog"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("BlogService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("BlogService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const BLOG_SERVICE_NAME = "BlogService";
